# CLion remote docker environment (How to build docker container, run and stop it)
#
# Build and run:
#   docker build -t clion/ubuntu20.04-clang9:0.1 -f Dockerfile-U20.04-clang9.txt .
#   docker run -d --cap-add sys_ptrace -p127.0.0.1:2222:22 --name u20.04-clang clion/ubuntu20.04-clang9:0.1
#   ssh-keygen -f "$HOME/.ssh/known_hosts" -R "[localhost]:2222"
#
# stop:
#   docker stop clion_remote_env
# 
# ssh credentials (test user):
#   user@password 

FROM ubuntu:20.04
ENV TZ=America/New_York
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update \
  && apt-get install -y ssh \
      build-essential \
      gcc \
      g++ \
      gdb \
      clang \
      rsync \
      tar \
      python \
  && apt-get clean
  

RUN apt-get install -y libncurses5-dev libncursesw5-dev


RUN apt-get install -y --no-install-recommends \
    cmake \
    curl \
    tree \
    valgrind \
    git \
	stress


RUN apt-get install -y --no-install-recommends libboost-dev
 
# because nano sucks
RUN apt-get install -y --no-install-recommends vim

# Removing adding ssh and a user
# RUN ( \
#     echo 'LogLevel DEBUG2'; \
#     echo 'PermitRootLogin yes'; \
#     echo 'PasswordAuthentication yes'; \
#     echo 'Subsystem sftp /usr/lib/openssh/sftp-server'; \
#   ) > /etc/ssh/sshd_config_test_clion \
#   && mkdir /run/sshd

# RUN useradd -m user \
#   && yes password | passwd user

# CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_config_test_clion"]
